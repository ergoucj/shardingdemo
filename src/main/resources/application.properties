##配置数据源
spring.shardingsphere.datasource.names=master0,master1,master0slave0,master1slave0

spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://localhost:3306/db_test
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=123456

spring.shardingsphere.datasource.master0slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0slave0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0slave0.url=jdbc:mysql://localhost:3306/db_test_slave
spring.shardingsphere.datasource.master0slave0.username=root
spring.shardingsphere.datasource.master0slave0.password=123456


spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://localhost:3306/db_test1
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=123456

spring.shardingsphere.datasource.master1slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1slave0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1slave0.url=jdbc:mysql://localhost:3306/db_test_slave
spring.shardingsphere.datasource.master1slave0.username=root
spring.shardingsphere.datasource.master1slave0.password=123456

# 分表策略 其中book为逻辑表 分表主要取决于id行
spring.shardingsphere.sharding.tables.book.actual-data-nodes=ds$->{0..1}.book$->{0..1}
spring.shardingsphere.sharding.tables.book.table-strategy.inline.sharding-column=id
# 分片算法表达式
spring.shardingsphere.sharding.tables.book.table-strategy.inline.algorithm-expression=book$->{id % 2}
#自增列名称
spring.shardingsphere.sharding.tables.book.key-generator.column=id
#自增列值生成器类型，缺省表示使用默认自增列值生成器。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID
spring.shardingsphere.sharding.tables.book.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.binding-tables=book

#默认表分片策略，同分表策略
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=master$->{id % 2}

# 逻辑主从库名和实际主从库映射关系
# 主数据库0
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=master0
#从库
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=master0slave0
# 主数据库1
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=master1
#从库
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names=master1slave0


mybatis.typeAliasesPackage=com.example.sharding.shardingdemo.entity
mybatis.mapperLocations=classpath:mapper/*.xml

#打印sql
spring.shardingsphere.props.sql.show=true

#mybatis 打印 sql
logging.level.com.example.sharding.shardingdemo.dao=debug
